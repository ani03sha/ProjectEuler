/**
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 * By starting with 1 and 2, the first 10 terms will be:
 *
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million,
 * find the sum of the even-valued terms.
 */


package org.redquark.euler.level1;

public class Problem2 {

    public static void main(String[] args) {

        // First two terms of the Fibonacci sequence
        int a = 1;
        int b = 2;

        // Sum should be initialized to b as it is also an even number
        int sum = b;

        while (b < 4000000) {

            // Getting next term of the sequence
            int x = a + b;

            // updating the values of a and b to get the next term
            a = b;
            b = x;

            // Check if the next term is an even number
            if (x % 2 == 0) {
                sum = sum + x;
            }
        }
        System.out.println(sum);
    }
}
