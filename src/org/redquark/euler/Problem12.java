/*
 * The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
 *
 * 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
 *
 * Let us list the factors of the first seven triangle numbers:
 *
 *  1: 1
 *  3: 1,3
 *  6: 1,2,3,6
 * 10: 1,2,5,10
 * 15: 1,3,5,15
 * 21: 1,3,7,21
 * 28: 1,2,4,7,14,28
 * We can see that 28 is the first triangle number to have over five divisors.
 *
 * What is the value of the first triangle number to have over five hundred divisors?
 */


package org.redquark.euler;

public class Problem12 {

    public static void main(String[] args) {

        int i = 1;
        int n = 0;
        try {
            while (true) {
                int count = 1;
                n = i * (i + 1) / 2;
                for (int j = 2; j < Math.sqrt(n); j++) {
                    if (isPrime(j)) {
                        int exponent = maxExponent(n, j);
                        count = count * (exponent + 1);
                    }
                }
                if (count > 500) {
                    break;
                }
                i++;
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        System.out.println(n);
    }

    private static int maxExponent(int n, int p) {
        int count = 0;
        while (n % p == 0) {
            count++;
            n = n / p;
        }
        return count;
    }

    /**
     * Utility method to check if the number is prime
     */
    private static boolean isPrime(int n) {
        // Looping starts from 3 and jumps every two integers
        for (int i = 2; i <= Math.sqrt(n); i++) {
            if (n % i == 0) {
                return false;
            }
        }
        return true;
    }
}
